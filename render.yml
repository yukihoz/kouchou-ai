services:
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=${ENVIRONMENT}
    ports:
      - "8000:8000"
    volumes:
      - ./server:/app
    environment:
      - LOG_LEVEL=debug
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - app-network
  
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_BASEPATH=${NEXT_PUBLIC_API_BASEPATH}
        - API_BASEPATH=${API_BASEPATH}
        - NEXT_PUBLIC_PUBLIC_API_KEY=${NEXT_PUBLIC_PUBLIC_API_KEY}
        - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "3000:3000"
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  client-admin:
    build:
      context: ./client-admin
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_CLIENT_BASEPATH=${NEXT_PUBLIC_CLIENT_BASEPATH}
        - NEXT_PUBLIC_API_BASEPATH=${NEXT_PUBLIC_API_BASEPATH}
        - NEXT_PUBLIC_ADMIN_API_KEY=${NEXT_PUBLIC_ADMIN_API_KEY}
    ports:
      - "4000:4000"
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app-network
      
networks:
  app-network:
    driver: bridge
